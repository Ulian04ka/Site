@model ShopKnitting.Models.ProductModel
@using ShopKnitting.Models.Auxiliary;
@{
    ViewData["Title"] = "Create";
}

<h1>Добавить автомобиль</h1>

<h4>Заполните карточку автомобиля</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data" method="post" class="needs-validation row g-3" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Brand" class="control-label"></label>
                <select asp-for="Brand" class="form-select" aria-label="Выбор марки автомобиля"
                        asp-items="ViewBag.Brand" id="Brand" required>
                </select>
                <span asp-validation-for="Brand" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Model" class="control-label"></label>
                <input asp-for="Model" class="form-control" required/>
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Year" class="control-label"></label>
                <input asp-for="Year" class="form-control" min="1800" max="2023"/>
                <span asp-validation-for="Year" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CarBody" class="control-label"></label>
                <select asp-for="CarBody" class="form-select" aria-label="Выбор типа кузова"
                        asp-items="Html.GetEnumSelectList<ShopKnitting.Models.Auxiliary.CarBodyEnum>()" required>
                    @*<option selected>@CarBodyEnum.defaultCarBody.</option>*@
                </select>
                <span asp-validation-for="CarBody" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control" rows="3" id="textareaDescription"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <script>
                var textarea = document.getElementById("textareaDescription");
                textarea.value = "Двигатель: ?; Мощность: ? л.с.; Коробка передач: ?; Привод: ?; Цвет: ?; Руль: ?";
            </script>
            <div class="form-group">
                <label asp-for="Cost" class="control-label"></label>
                <input asp-for="Cost" class="form-control" min="0" max="10000000000"/>
                <span asp-validation-for="Cost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountInStack" class="control-label"></label>
                <input asp-for="CountInStack" class="form-control" />
                <span asp-validation-for="CountInStack" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="productImage" class="form-label">@Html.DisplayNameFor(model => model.Images)</label>
                <input class="form-control" name="upload" onchange="ValidateSingleInput(this);" type="file" id="productImages" required asp-for="Images.Path">
            </div>
            <br />
            <div class="form-group ">
                <input type="submit" value="Создать" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<br />

<div>
    <a asp-action="Index">Перейти к списку автомобилей</a>
</div>
<script>
    var _validFileExtensions = [".jpg", ".jpeg", ".bmp", ".png"];
    function ValidateSingleInput(fileInput) {
        if (fileInput.type == "file") {
            var fileInputValue = fileInput.value;
            if (fileInputValue.length > 0) {
                var fileInputValid = false;
                for (var j = 0; j < _validFileExtensions.length; j++) {
                    var fileInputExtension = _validFileExtensions[j];
                    if (fileInputValue.substr(fileInputValue.length - fileInputExtension.length, fileInputExtension.length).toLowerCase()
                        == fileInputExtension.toLowerCase()) {
                        fileInputValid = true;
                        break;
                    }
                }

                if (!fileInputValid) {
                    toastr.warning('К сожалению данный формат изображения не поддерживается!', 'Предупреждение');
                    fileInput.value = "";
                    return false;
                }
            }
        }
        return true;
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
